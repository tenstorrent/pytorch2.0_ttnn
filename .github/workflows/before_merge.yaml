name: "Tests"

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      commit_report:
        description: 'Commit generated report files: None, Readme, All'
        required: false
        default: 'None'
  merge_group:

permissions:
  actions: read
  contents: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  tools-tests:
    env:
      ARCH_NAME: wormhole_b0
      pytest_verbosity: 2    
      pytest_report_title: "⭐️ Tools Tests"
    runs-on: ["in-service", "n150"]
    steps:
      - uses: ./.github/actions/common_repo_setup.yaml

      - name: Run Tools Tests 
        run: |
          python3 -m pytest --github-report tests/tools/ -s

  lowering-tests:
    env:
      ARCH_NAME: wormhole_b0
      pytest_verbosity: 2    
      pytest_report_title: "⭐️ Aten → TTNN Lowering Tests"
    runs-on: ["in-service", "n150"]
    steps:
      - uses: ./.github/actions/common_repo_setup.yaml

      - name: Run Lowering Tests 
        run: |
          python3 -m pytest --github-report tests/lowering/ -s

  model-tests:
    needs: lowering-tests
    runs-on: ["in-service", "n150"]
    strategy:
      matrix: # Need to find a way to replace this with a generator
        group: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

    env:
      ARCH_NAME: wormhole_b0
      pytest_verbosity: 1
      pytest_report_title: "⭐️ Model Tests - Group ${{ matrix.group }}"    
    steps:
      - uses: ./.github/actions/common_repo_setup.yaml

      - name: Run Model Tests
        run: |
          python3 -m pytest --github-report tests/models/ --splits ${{ inputs.num_groups }} --group ${{ matrix.group }} -s
          python3 tools/huggingface_delete_cache.py
          rm -rf ~/.torch/models
          free -h

      - uses: actions/upload-artifact@v3
        with:
          name: model-tests-metrics-group-${{ matrix.group }}
          path: tests/metrics/

  collect-metrics:
    needs: model-tests
    if: ${{ github.event_name == 'workflow_dispatch' && needs.lowering-tests.outputs.outcome == 'success' }}
    runs-on: ["in-service", "n150"]
    env: 
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: ./.github/actions/common_repo_setup.yaml
      
      - name: Download Metrics Artifacts
        run: |
          mkdir -p tests/metrics
          for i in $(seq 1 ${{ inputs.num_groups }}); do
            echo "Downloading metrics for Group $i"
            gh run download ${{ github.run_id }} --name "model-tests-metrics-group-$i" --path tests/metrics/
          done

      - name: Collect Metrics Report
        run: | 
          python3 tools/collect_metrics.py
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          if [ "${{ github.event.inputs.commit_report }}" == "All" ]; then
            git add .
          elif [ "${{ github.event.inputs.commit_report }}" == "Readme" ]; then
            git add README.md
          elif [ "${{ github.event.inputs.commit_report }}" == "None" ]; then
            echo "No files will be committed"
            exit 0
          fi
          
          if git diff-index --quiet HEAD; then
            echo "No changes to commit"
          else
            git commit -m '[auto][on-merge-queue] Update metrics report in README.md'
            git push
          fi
